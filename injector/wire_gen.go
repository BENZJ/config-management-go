// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"config-management-go/controller"
	"config-management-go/models/file"
	"config-management-go/models/file_item"
	"config-management-go/models/iteration"
	file2 "config-management-go/service/file"
	fileitem2 "config-management-go/service/file_item"
	iteration2 "config-management-go/service/iteration"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func BuildApiInjector() (*ApiInjector, func(), error) {
	db, cleanup, err := InitGormDB()
	if err != nil {
		return nil, nil, err
	}
	repository := iteration.NewRepository(db)
	service := iteration2.NewService(repository)
	iterationController := controller.NewIterationController(service)
	fileRepository := file.NewRepository(db)
	fileService := file2.NewService(fileRepository)
	fileController := controller.NewFileController(fileService)
	fileitemRepository := fileitem.NewRepository(db)
	fileitemService := fileitem2.NewService(fileitemRepository)
	fileItemController := controller.NewFileItemController(fileitemService)
	controllerInjector := NewControllerInjector(iterationController, fileController, fileItemController)
	engine := InitGinEngine(controllerInjector)
	apiInjector := NewApiInjector(engine)
	return apiInjector, func() {
		cleanup()
	}, nil
}
